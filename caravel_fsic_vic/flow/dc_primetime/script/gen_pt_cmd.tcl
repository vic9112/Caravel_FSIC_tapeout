#!/usr/bin/tclsh
source ../../common/common.tcl

foreach scenario $PT_SELECTED_SCENARIO  {
  set fp [open "./pt_workspace/${scenario}/run_pt_cmd.${scenario}.tcl" w+]
  puts $fp "#################################################################################"
  puts $fp "# PrimeTime Reference Methodology Script"
  puts $fp "# Script: pt.tcl"
  puts $fp "# Version: U-2022.12-SP4 (June 30, 2023)"
  puts $fp "# Copyright (C) 2007-2023 Synopsys, Inc. All rights reserved."
  puts $fp "################################################################################"
  puts $fp "# Please do not modify the sdir variable."
  puts $fp "# Doing so may cause script to fail."
  puts $fp "set sdir \".\" "
  puts $fp "\n"
  puts $fp "##################################################################"
  puts $fp "#    Source common and pt_setup.tcl File                         #"
  puts $fp "##################################################################"
  puts $fp "source ../../common/common.tcl"
  puts $fp "# make PT_REPORTS_DIR"
  puts $fp "file mkdir ./pt_workspace/${scenario}/\$PT_REPORTS_DIR"
  puts $fp "# make RESULTS_DIR"
  puts $fp "file mkdir ./pt_workspace/${scenario}/\$PT_RESULTS_DIR"
  puts $fp "\n"
  puts $fp "##################################################################"
  puts $fp "#    Search Path, Library and Operating Condition Section        #"
  puts $fp "##################################################################"
  puts $fp "set report_default_significant_digits 3 "
  puts $fp "set sh_source_uses_search_path true "
  puts $fp "set search_path \". \$search_path \""
  puts $fp "\n"
  puts $fp "##################################################################"
  puts $fp "#    Netlist Reading Section                                     #"
  puts $fp "##################################################################"
  puts $fp "set link_path \"* \$PT_link_path\""
  puts $fp "read_verilog \$PT_NETLIST_FILES"
  puts $fp "current_design \$DESIGN_NAME"
  puts $fp "link"
  puts $fp "\n"
  puts $fp "##################################################################"
  puts $fp "#    Back Annotation Section                                     #"
  puts $fp "##################################################################"
  puts $fp "if \{ \[info exists PT_PARASITIC_PATHS\] && \[info exists PT_PARASITIC_FILES\] \} \{"
  puts $fp "  foreach para_path \$PT_PARASITIC_PATHS para_file \$PT_PARASITIC_FILES \{"
  puts $fp "    if \{\[string compare \$para_path \$DESIGN_NAME\] == 0\} \{"
  puts $fp "      read_parasitics \$para_file"
  puts $fp "    \} else \{"
  puts $fp "      read_parasitics -path \$para_path \$para_file"
  puts $fp "    \}"
  puts $fp "  \}"
  puts $fp "\}"
  puts $fp "\n"
  puts $fp "##################################################################"
  puts $fp "#    Reading Constraints Section                                 #"
  puts $fp "##################################################################"
  puts $fp "if  \{\[info exists PT_CONSTRAINT_FILES\]\} \{"
  puts $fp "        foreach constraint_file \$PT_CONSTRAINT_FILES \{"
  puts $fp "                if \{\[file extension \$constraint_file\] eq \".sdc\"\} \{"
  puts $fp "                        read_sdc -echo \$constraint_file"
  puts $fp "                \} else \{"
  puts $fp "                        source -echo \$constraint_file"
  puts $fp "                \}"
  puts $fp "        \}"
  puts $fp "\}"
  puts $fp "\n"
  puts $fp "##################################################################"
  puts $fp "#    Fix ECO Variable Setup                                      #"
  puts $fp "##################################################################"
  puts $fp "set timing_save_pin_arrival_and_slack true"
  puts $fp "\n"
  puts $fp "##################################################################"
  puts $fp "#    Update_timing and check_timing Section                      #"
  puts $fp "##################################################################"
  puts $fp "update_timing -full"
  puts $fp "check_timing -verbose > ./pt_workspace/${scenario}/\$PT_REPORTS_DIR/\$\{DESIGN_NAME\}_check_timing.report"
  puts $fp "\n"
  puts $fp "##################################################################"
  puts $fp "#    Report_timing Section                                       #"
  puts $fp "##################################################################"
  puts $fp "report_global_timing > ./pt_workspace/${scenario}/\$PT_REPORTS_DIR/\$\{DESIGN_NAME\}_report_global_timing.report"
  puts $fp "report_clock -skew -attribute > ./pt_workspace/${scenario}/\$PT_REPORTS_DIR/\$\{DESIGN_NAME\}_report_clock.report"
  puts $fp "report_analysis_coverage > ./pt_workspace/${scenario}/\$PT_REPORTS_DIR/\$\{DESIGN_NAME\}_report_analysis_coverage.report"
  puts $fp "report_timing -slack_lesser_than 10 -delay min_max -nosplit -input -net  > ./pt_workspace/${scenario}/\$PT_REPORTS_DIR/\$\{DESIGN_NAME\}_report_timing.report"
  puts $fp "report_timing -slack_lesser_than 0.0 -delay min_max -nosplit -input -net  > ./pt_workspace/${scenario}/\$PT_REPORTS_DIR/\$\{DESIGN_NAME\}_report_timing_violation.report"
  puts $fp "\n"
  puts $fp "##################################################################"
  puts $fp "#    Fix ECO Power Cell Downsize Section                         #"
  puts $fp "##################################################################"
  puts $fp "fix_eco_power -pba_mode none -verbose"
  puts $fp "\n"
  puts $fp "##################################################################"
  puts $fp "#   write SDF for Post-sim	                             	     #"
  puts $fp "##################################################################"
#  puts $fp "write_sdf ./${DESIGN_NAME}.${scenario}.sdf"
  puts $fp "write_sdf ./../../results/${DESIGN_NAME}.${scenario}.sdf"
  puts $fp "\n"
  puts $fp "##################################################################"
  puts $fp "#    Save PT Session		                             #"
  puts $fp "##################################################################"
  puts $fp "save_session ./pt_workspace/${scenario}/\$PT_SESSION_DIR"
  puts $fp "\n"
  puts $fp "##################################################################"
  puts $fp "#    Copy the parasitics_command.log and pt_shell_command.log    #"
  puts $fp "##################################################################"
  puts $fp "exec /bin/cp -r parasitics_command.log ./pt_workspace/${scenario}/parasitics_command.log.${scenario}"
  puts $fp "exit"
  close $fp 
}



