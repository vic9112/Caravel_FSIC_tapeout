#!/usr/bin/tclsh
source ../../common/common.tcl

foreach scenario $PT_SELECTED_SCENARIO  {
  set fp [open "./${scenario}/run_pt_cmd.${scenario}.tcl" w+]
  puts $fp "#################################################################################"
  puts $fp "# PrimeTime Reference Methodology Script"
  puts $fp "# Script: pt.tcl"
  puts $fp "# Version: U-2022.12-SP4 (June 30, 2023)"
  puts $fp "# Copyright (C) 2007-2023 Synopsys, Inc. All rights reserved."
  puts $fp "################################################################################"
  puts $fp "# Please do not modify the sdir variable."
  puts $fp "# Doing so may cause script to fail."
  puts $fp "set sdir \".\" "
  puts $fp "\n"
  puts $fp "##################################################################"
  puts $fp "#    Source common and pt_setup.tcl File                         #"
  puts $fp "##################################################################"
  puts $fp "source ../../common/common.tcl"
  puts $fp "# make PT_REPORTS_DIR"
  puts $fp "file mkdir ./${scenario}/\$PT_REPORTS_DIR"
  puts $fp "# make RESULTS_DIR"
  puts $fp "file mkdir ./${scenario}/\$PT_RESULTS_DIR"
  puts $fp "\n"
  puts $fp "##################################################################"
  puts $fp "#    Search Path, Library and Operating Condition Section        #"
  puts $fp "##################################################################"
  puts $fp "set report_default_significant_digits 3 "
  puts $fp "set sh_source_uses_search_path true "
  puts $fp "set search_path \". \$search_path \""
  puts $fp "\n"
  puts $fp "##################################################################"
  puts $fp "#    Netlist Reading Section                                     #"
  puts $fp "##################################################################"
  puts $fp "set link_path \"* \$PT_link_path\""
  puts $fp "read_verilog \$PT_NETLIST_FILES"
  puts $fp "current_design \$DESIGN_NAME"
  puts $fp "link"
  puts $fp "\n"
  puts $fp "##################################################################"
  puts $fp "#    Back Annotation Section                                     #"
  puts $fp "##################################################################"
  puts $fp "if \{ \[info exists PT_PARASITIC_PATHS\] && \[info exists PT_PARASITIC_FILES\] \} \{"
  puts $fp "  foreach para_path \$PT_PARASITIC_PATHS para_file \$PT_PARASITIC_FILES \{"
  puts $fp "    if \{\[string compare \$para_path \$DESIGN_NAME\] == 0\} \{"
  puts $fp "      read_parasitics \$para_file"
  puts $fp "    \} else \{"
  puts $fp "      read_parasitics -path \$para_path \$para_file"
  puts $fp "    \}"
  puts $fp "  \}"
  puts $fp "\}"
  puts $fp "\n"
  puts $fp "##################################################################"
  puts $fp "#    Reading Constraints Section                                 #"
  puts $fp "##################################################################"
  puts $fp "if  \{\[info exists CONSTRAINT_FILES\]\} \{"
  puts $fp "        foreach constraint_file \$PT_CONSTRAINT_FILES \{"
  puts $fp "                if \{\[file extension \$constraint_file\] eq \".sdc\"\} \{"
  puts $fp "                        read_sdc -echo \$constraint_file"
  puts $fp "                \} else \{"
  puts $fp "                        source -echo \$constraint_file"
  puts $fp "                \}"
  puts $fp "        \}"
  puts $fp "\}"
  puts $fp "\n"
  puts $fp "##################################################################"
  puts $fp "#    Fix ECO Variable Setup                                      #"
  puts $fp "##################################################################"
  puts $fp "set timing_save_pin_arrival_and_slack true"
  puts $fp "\n"
  puts $fp "##################################################################"
  puts $fp "#    Update_timing and check_timing Section                      #"
  puts $fp "##################################################################"
  puts $fp "update_timing -full"
  puts $fp "check_timing -verbose > ./${scenario}\$PT_REPORTS_DIR/\$\{DESIGN_NAME\}_check_timing.report"
  puts $fp "\n"
  puts $fp "##################################################################"
  puts $fp "#    Report_timing Section                                       #"
  puts $fp "##################################################################"
  puts $fp "report_global_timing > ./${scenario}/\$PT_REPORTS_DIR/\$\{DESIGN_NAME\}_report_global_timing.report"
  puts $fp "report_clock -skew -attribute > ./${scenario}/\$PT_REPORTS_DIR/\$\{DESIGN_NAME\}_report_clock.report"
  puts $fp "report_analysis_coverage > ./${scenario}/\$PT_REPORTS_DIR/\$\{DESIGN_NAME\}_report_analysis_coverage.report"
  puts $fp "report_timing -slack_lesser_than 0.0 -delay min_max -nosplit -input -net  > ./${scenario}/\$PT_REPORTS_DIR/\$\{DESIGN_NAME\}_report_timing.report"
  puts $fp "\n"
  puts $fp "##################################################################"
  puts $fp "#    Fix ECO Power Cell Downsize Section                         #"
  puts $fp "##################################################################"
  puts $fp "fix_eco_power -pba_mode none -verbose"

  puts $fp "##################################################################"
  puts $fp "#    Save_Session Section                                        #"
  puts $fp "##################################################################"

  puts $fp "#=============================================================================="
  puts $fp "#IMSA from 2018.06* version"
  puts $fp "#The interactive multi-scenario analysis (IMSA) flow lets you load and simultaneously debug multiple collections of timing paths    from different worker sessions. "
  puts $fp "#In this flow, you save a collection of timing paths using the save_session -only_timing_paths command "
  puts $fp "#Then restore the timing paths to an IMSA session with the restore_session command"
  puts $fp "#Example:"
  puts $fp "# pt_shell> set paths [get_timing_paths -slack_lesser infinity -max 1000]"
  puts $fp "# pt_shell> save_session -only_timing $paths -name scenario1 scenario1.session"
  puts $fp "#Add below required commands as mentioned above accordingly"
  puts $fp "#=============================================================================="
  puts $fp "save_session ${DESIGN_NAME}_ss"
  close $fp 
}



